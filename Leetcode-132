给定一个字符串 s，将 s 分割成一些子串，使每个子串都是回文串。


返回符合要求的最少分割次数。


示例:


输入: "aab"

输出: 1

解释: 进行一次分割就可将 s 分割成 ["aa","b"] 这样两个回文子串。


来源：力扣（LeetCode）

链接：力扣

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution:
def minCut(self, s: str) -> int:
isPalindrome = lambda s: s[::-1] == s
dp = [-1, 0]
for i in range(1, len(s)):
dp.append(min([dp[-1]]+[dp[j] for j in range(i) if isPalindrome(s[j: i+1])])+1)
return dp[-1]
