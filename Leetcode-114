给定一个二叉树，原地将它展开为一个单链表。

 

例如，给定二叉树

    1
   / \
  2   5
 / \   \
3   4   6

将其展开为：

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/flatten-binary-tree-to-linked-list
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
# 中序遍历
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        while root:
            if root.left:   
                #左子树存在的话才进行操作
                sub_left = root.left
                while sub_left.right:   
                    #左子树的右子树找到最深
                    sub_left = sub_left.right
                sub_left.right = root.right 
                #将root的右子树挂到左子树的右子树的最深
                root.right = root.left      
                #将root的左子树挂到右子树
                root.left = None           
                 #将root左子树清空
            root = root.right               #继续下一个节点的操作
