给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。


说明：本题中，我们将空字符串定义为有效的回文串。


示例 1:


输入: "A man, a plan, a canal: Panama"

输出: true


示例 2:


输入: "race a car"

输出: false


来源：力扣（LeetCode）

链接：力扣

著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution:
def isPalindrome(self, s: str) -> bool:
s = s.lower()
left, right = 0, len(s) - 1
while left < right:
# 两个循环找到左侧和右侧为字母或者数字的位置
while left < len(s) - 1 and not s[left].isalnum():
left += 1
while right > 0 and not s[right].isalnum():
right -= 1
if left >= right: # 判断移动过后的left right是否满足left在左，right在右的相对位置
break
else:
if s[left] != s[right]: # 如果左右指针所指不同，则肯定不构成回文
return False
else: # 左右指针各前进一步
left += 1
right -= 1
return True
